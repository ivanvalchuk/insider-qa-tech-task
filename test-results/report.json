{
    "results": {
        "tool": {
            "name": "pytest",
            "version": "8.3.3"
        },
        "summary": {
            "tests": 10,
            "passed": 9,
            "failed": 1,
            "skipped": 0,
            "pending": 0,
            "other": 0,
            "start": 1748585928.929162,
            "stop": 1748585977.4867918
        },
        "tests": [
            {
                "name": "tests/test_API.py::test_get_pets_by_status",
                "status": "passed",
                "duration": 0.6540737909963354,
                "start": 1748585929.035087,
                "stop": 1748585929.689423,
                "retries": 0,
                "file_path": "tests/test_API.py",
                "tags": [
                    "api"
                ]
            },
            {
                "name": "tests/test_API.py::test_update_pet",
                "status": "passed",
                "duration": 0.4983290429809131,
                "start": 1748585929.689801,
                "stop": 1748585930.1883311,
                "retries": 0,
                "file_path": "tests/test_API.py",
                "tags": [
                    "api"
                ]
            },
            {
                "name": "tests/test_API.py::test_create_pet",
                "status": "passed",
                "duration": 0.5017047920264304,
                "start": 1748585930.188725,
                "stop": 1748585930.6912022,
                "retries": 0,
                "file_path": "tests/test_API.py",
                "tags": [
                    "api"
                ]
            },
            {
                "name": "tests/test_API.py::test_get_pet",
                "status": "passed",
                "duration": 0.5062280840356834,
                "start": 1748585930.691691,
                "stop": 1748585931.1983008,
                "file_path": "tests/test_API.py",
                "tags": [
                    "parametrize::pet_id, status_code::[(99, 200), (999, 404)]",
                    "api"
                ]
            },
            {
                "name": "tests/test_API.py::test_delete_pet",
                "status": "passed",
                "duration": 0.49663275002967566,
                "start": 1748585931.698713,
                "stop": 1748585932.1955872,
                "file_path": "tests/test_API.py",
                "tags": [
                    "parametrize::pet_id, status_code::[(99, 200), (999, 404)]",
                    "api"
                ]
            },
            {
                "name": "tests/test_API.py::test_create_list_of_users",
                "status": "passed",
                "duration": 0.4958415000583045,
                "start": 1748585932.691766,
                "stop": 1748585933.187802,
                "file_path": "tests/test_API.py",
                "tags": [
                    "parametrize::request_body, status_code::[([{'id': 0, 'username': 'ivalchuk', 'firstName': 'Ivan', 'lastName': 'Valchuk', 'email': 'ivan.valchuk@gmail.com', 'password': '', 'phone': '+342344324324'}], 200), ('{\"id\": 23, \"category\": {\"id\": 5, \"name\": \"Ivan Valchuk\"}}', 500)]",
                    "api"
                ]
            },
            {
                "name": "tests/test_API.py::test_create_order_for_pet",
                "status": "passed",
                "duration": 0.49344187299720943,
                "start": 1748585933.677597,
                "stop": 1748585934.171435,
                "file_path": "tests/test_API.py",
                "tags": [
                    "parametrize::request_body, status_code::[({'id': 0, 'petId': 0, 'quantity': 0, 'shipDate': '2025-05-29T18:04:43.451Z', 'status': 'placed', 'complete': True}, 200), ({'id:': 0, 'petId': 0, 'quantity': 0, 'shipDate': '2025-29T18:04:43.451Z', 'status': 'placed', 'complete': True}, 500)]",
                    "api"
                ]
            },
            {
                "name": "tests/test_desktop.py::test_check_navigation",
                "status": "passed",
                "duration": 6.377064958040137,
                "start": 1748585934.663611,
                "stop": 1748585941.041035,
                "retries": 0,
                "file_path": "tests/test_desktop.py",
                "tags": [
                    "desktop"
                ]
            },
            {
                "name": "tests/test_desktop.py::test_check_career_page",
                "status": "failed",
                "raw_status": "call_failed",
                "duration": 34.15311675000703,
                "start": 1748585941.0414999,
                "stop": 1748585975.325172,
                "retries": 0,
                "file_path": "tests/test_desktop.py",
                "tags": [
                    "desktop"
                ],
                "trace": "desktop_app = <page_objects.insiderApplication.App object at 0x1100e06e0>\n\n    @mark.desktop\n    @allure.title(\"2. Select \u201cCompany\u201d menu in navigation bar, select \u201cCareers\u201d and check Career page, its Locations, Teams and Life at Insider blocks are opened or not.\")\n    def test_check_career_page(desktop_app):\n    \n      desktop_app.hover_over(\"Company\")\n>     desktop_app.click_link(\"Careers\")\n\ntests/test_desktop.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage_objects/insiderApplication.py:32: in click_link\n    self.page.get_by_role(\"link\", name = link).click()\n.venv/lib/python3.13/site-packages/playwright/sync_api/_generated.py:15507: in click\n    self._sync(\n.venv/lib/python3.13/site-packages/playwright/_impl/_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n.venv/lib/python3.13/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n.venv/lib/python3.13/site-packages/playwright/_impl/_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x1056ce3c0>, cb = <function Channel.send.<locals>.<lambda> at 0x1100fb740>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"link\", name=\"Careers\")\n\n.venv/lib/python3.13/site-packages/playwright/_impl/_connection.py:528: TimeoutError",
                "message": "The test failed in the call phase due to an exception"
            },
            {
                "name": "tests/test_desktop.py::test_check_quality_assurance_page",
                "status": "passed",
                "duration": 0.0018059160211123526,
                "start": 1748585975.3287292,
                "stop": 0,
                "retries": 0,
                "file_path": "tests/test_desktop.py",
                "tags": [
                    "desktop"
                ]
            }
        ]
    }
}